{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","services/GetTodos.tsx","index.tsx"],"names":["Loader","_jsx","className","children","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","_ref","todo","setSelected","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","user","setUser","useEffect","userId","concat","finally","_jsxs","id","type","onClick","title","completed","href","email","name","TodoList","React","memo","todos","selectedTodo","setSelectedTodo","map","classNames","TodoFilter","setFilter","setQuery","setDebouncedQuery","query","apllyDebouncedQuery","useCallback","debounce","onChange","event","selectedValue","target","value","placeholder","textOfQuery","trim","style","pointerEvents","App","setTodos","filter","_useState5","_useState6","_useState7","_useState8","debouncedQuery","_useState9","_useState10","filteredTodos","useMemo","todoList","preparedTodos","_toConsumableArray","toLowerCase","includes","Error","getPreparedTodos","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6738e092.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  setSelected: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, setSelected }) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelected(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoModal } from '../TodoModal';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({ todos }) => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'fa-eye': !selectedTodo || selectedTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n        {selectedTodo && (\n          <TodoModal\n            todo={selectedTodo}\n            setSelected={setSelectedTodo}\n          />\n        )}\n\n      </tbody>\n    </table>\n  );\n});\n","import debounce from 'lodash.debounce';\nimport React, { useCallback } from 'react';\n\ntype Props = {\n  setFilter: (filter: string) => void;\n  setQuery: (query: string) => void;\n  setDebouncedQuery: (query: string) => void;\n  query: string;\n};\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  setFilter,\n  setQuery,\n  setDebouncedQuery,\n  query,\n}) => {\n  const apllyDebouncedQuery = useCallback(\n    debounce(setDebouncedQuery, 500), [],\n  );\n\n  // eslint-disable-next-line\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n\n    setFilter(selectedValue);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const textOfQuery = event.target.value;\n\n    setQuery(textOfQuery);\n    apllyDebouncedQuery(textOfQuery.trim());\n  };\n\n  const clear = () => {\n    setQuery('');\n    setDebouncedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clear}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Loader } from './components/Loader';\nimport { getPreparedTodos } from './services/GetTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n  const [debouncedQuery, setDebouncedQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => getPreparedTodos(\n    todos,\n    filter,\n    debouncedQuery,\n  ), [todos, filter, debouncedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setQuery={setQuery}\n                setDebouncedQuery={setDebouncedQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              )\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function getPreparedTodos(\n  todoList: Todo[],\n  filter: string,\n  query: string,\n) {\n  let preparedTodos = [...todoList];\n\n  if (query) {\n    // eslint-disable-next-line\n    preparedTodos = preparedTodos.filter(todo => todo.title.toLowerCase().includes(query.trim().toLowerCase()));\n  }\n\n  if (filter !== 'all') {\n    switch (filter) {\n      case 'all':\n        preparedTodos = [...todoList];\n        break;\n\n      case 'active':\n        preparedTodos = preparedTodos.filter(todo => !todo.completed);\n        break;\n\n      case 'completed':\n        preparedTodos = preparedTodos.filter(todo => todo.completed);\n        break;\n\n      default:\n        throw new Error('Error');\n    }\n  }\n\n  return preparedTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}